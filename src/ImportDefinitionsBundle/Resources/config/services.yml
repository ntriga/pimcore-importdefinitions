imports:
    - { resource: "services/forms.yml" }
    - { resource: "services/installer.yml" }
    - { resource: "services/commands.yml" }

services:
    import_definition.event_dispatcher:
        class: ImportDefinitionsBundle\Event\EventDispatcher
        arguments:
            - '@event_dispatcher'

    import_definition.service.placeholder:
        class: ImportDefinitionsBundle\Service\Placeholder

    import_definition.importer:
        class: ImportDefinitionsBundle\Importer\Importer
        arguments:
            - '@import_definition.registry.provider'
            - '@import_definition.registry.filter'
            - '@import_definition.registry.runner'
            - '@import_definition.registry.interpreter'
            - '@import_definition.registry.setter'
            - '@import_definition.registry.cleaner'
            - '@import_definition.registry.loader'
            - '@import_definition.event_dispatcher'
            - '@logger'
        tags:
            - { name: monolog.logger, channel: import_definition }

    import_definition.exporter:
        class: ImportDefinitionsBundle\Exporter\Exporter
        arguments:
            - '@import_definition.registry.fetcher'
            - '@import_definition.registry.runner'
            - '@import_definition.registry.interpreter'
            - '@import_definition.registry.getter'
            - '@import_definition.registry.export_provider'
            - '@event_dispatcher'
            - '@logger'
        tags:
            - { name: monolog.logger, channel: export_definition }

    ### Registries
    import_definition.registry.provider:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - ImportDefinitionsBundle\Provider\ProviderInterface
            - 'Import Definition Providers'

    import_definition.form.registry.provider:
        class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

    import_definition.registry.export_provider:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - ImportDefinitionsBundle\Provider\ExportProviderInterface
            - 'Import Definition Export Providers'

    import_definition.form.registry.export_provider:
        class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

    import_definition.registry.loader:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - ImportDefinitionsBundle\Loader\LoaderInterface
            - 'Import Definition Loaders'

    import_definition.registry.cleaner:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - ImportDefinitionsBundle\Cleaner\CleanerInterface
            - 'Import Definition Cleaners'

    import_definition.registry.filter:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - ImportDefinitionsBundle\Filter\FilterInterface
            - 'Import Definition Filters'

    import_definition.registry.interpreter:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - ImportDefinitionsBundle\Interpreter\InterpreterInterface
            - 'Import Definition Interpreters'

    import_definition.form.registry.interpreter:
        class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

    import_definition.registry.setter:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - ImportDefinitionsBundle\Setter\SetterInterface
            - 'Import Definition Setters'

    import_definition.form.registry.setter:
        class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

    import_definition.registry.getter:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - ImportDefinitionsBundle\Getter\GetterInterface
            - 'Import Definition Getters'

    import_definition.form.registry.getter:
        class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

    import_definition.registry.fetcher:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - ImportDefinitionsBundle\Fetcher\FetcherInterface
            - 'Import Definition Fetchers'

    import_definition.form.registry.fetcher:
        class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

    import_definition.registry.runner:
        class: CoreShop\Component\Registry\ServiceRegistry
        arguments:
            - ImportDefinitionsBundle\Runner\RunnerInterface
            - 'Import Definition Runners'

    ### CLEANER
    import_definition.cleaner.deleter:
        class: ImportDefinitionsBundle\Cleaner\Deleter
        tags:
            - { name: import_definition.cleaner, type: deleter }

    import_definition.cleaner.none:
        class: ImportDefinitionsBundle\Cleaner\None
        tags:
            - { name: import_definition.cleaner, type: none }

    import_definition.cleaner.reference_cleaner:
        class: ImportDefinitionsBundle\Cleaner\ReferenceCleaner
        tags:
            - { name: import_definition.cleaner, type: reference_cleaner }

    import_definition.cleaner.unpuplisher:
        class: ImportDefinitionsBundle\Cleaner\Unpublisher
        tags:
            - { name: import_definition.cleaner, type: unpublisher }

    ### INTERPRETER
    import_definition.interpreter.assets_url:
        class: ImportDefinitionsBundle\Interpreter\AssetsUrlInterpreter
        arguments: ['@import_definition.service.placeholder']
        tags:
            - { name: import_definition.interpreter, type: assets_url, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\AssetsUrlInterpreterType }

    import_definition.interpreter.asset_url:
        class: ImportDefinitionsBundle\Interpreter\AssetUrlInterpreter
        arguments: ['@import_definition.service.placeholder']
        tags:
            - { name: import_definition.interpreter, type: asset_url, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\AssetUrlInterpreterType }

    import_definition.interpreter.asset_by_path:
        class: ImportDefinitionsBundle\Interpreter\AssetByPathInterpreter
        arguments: ['@import_definition.service.placeholder']
        tags:
            - { name: import_definition.interpreter, type: asset_by_path, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\AssetByPathInterpreterType }

    import_definition.interpreter.checkbox:
        class: ImportDefinitionsBundle\Interpreter\CheckboxInterpreter
        tags:
            - { name: import_definition.interpreter, type: checkbox, form-type: ImportDefinitionsBundle\Form\Type\NoConfigurationType }

    import_definition.interpreter.default_value:
        class: ImportDefinitionsBundle\Interpreter\DefaultValueInterpreter
        tags:
            - { name: import_definition.interpreter, type: default_value, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\DefaultValueInterpreterType }

    import_definition.interpreter.specific_object:
        class: ImportDefinitionsBundle\Interpreter\SpecificObjectInterpreter
        tags:
            - { name: import_definition.interpreter, type: specific_object, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\SpecificObjectInterpreterType }

    import_definition.interpreter.href:
        class: ImportDefinitionsBundle\Interpreter\HrefInterpreter
        tags:
            - { name: import_definition.interpreter, type: href, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\HrefInterpreterType }

    import_definition.interpreter.multi_href:
        class: ImportDefinitionsBundle\Interpreter\MultiHrefInterpreter
        tags:
            - { name: import_definition.interpreter, type: multi_href, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\MultiHrefInterpreterType }
    import_definition.interpreter.multiple_assets:
        class: ImportDefinitionsBundle\Interpreter\MultipleAssetsInterpreter
        tags:
            - { name: import_definition.interpreter, type: multiple_assets, form-type: ImportDefinitionsBundle\Form\Type\NoConfigurationType }
    import_definition.interpreter.quantity_value:
        class: ImportDefinitionsBundle\Interpreter\QuantityValueInterpreter
        tags:
            - { name: import_definition.interpreter, type: quantity_value, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\QuantityValueInterpreterType }

    import_definition.interpreter.nested:
        class: ImportDefinitionsBundle\Interpreter\NestedInterpreter
        arguments:
            - '@import_definition.registry.interpreter'
        tags:
            - { name: import_definition.interpreter, type: nested, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\NestedInterpreterType }

    import_definition.interpreter.expression:
        class: ImportDefinitionsBundle\Interpreter\ExpressionInterpreter
        arguments:
            - '@coreshop.expression_language'
            - '@service_container'
        tags:
            - { name: import_definition.interpreter, type: expression, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\ExpressionInterpreterType }

    import_definition.interpreter.object_resolver:
        class: ImportDefinitionsBundle\Interpreter\ObjectResolverInterpreter
        arguments:
            - '@service_container'
        tags:
            - { name: import_definition.interpreter, type: object_resolver, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\ObjectResolverType }

    import_definition.interpreter.definition:
        class: ImportDefinitionsBundle\Interpreter\DefinitionInterpreter
        arguments:
            - '@import_definitions.repository.definition'
            - '@import_definition.importer'
        tags:
            - { name: import_definition.interpreter, type: definition, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\DefinitionType }

    import_definition.interpreter.conditional:
        class: ImportDefinitionsBundle\Interpreter\ConditionalInterpreter
        arguments:
            - '@import_definition.registry.interpreter'
            - '@coreshop.expression_language'
            - '@service_container'
        tags:
            - { name: import_definition.interpreter, type: conditional, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\ConditionalInterpreterType }

    import_definition.interpreter.mapping:
        class: ImportDefinitionsBundle\Interpreter\MappingInterpreter
        arguments:
            - '@service_container'
        tags:
            - { name: import_definition.interpreter, type: mapping, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\MappingInterpreterType }

    import_definition.interpreter.iterator:
        class: ImportDefinitionsBundle\Interpreter\IteratorInterpreter
        arguments:
            - '@import_definition.registry.interpreter'
        tags:
            - { name: import_definition.interpreter, type: iterator, form-type: ImportDefinitionsBundle\Form\Type\Interpreter\IteratorInterpreterType }

    ### PROVIDER
    import_definition.provider.csv:
        class: ImportDefinitionsBundle\Provider\CsvProvider
        tags:
            - { name: import_definition.provider, type: csv, form-type: ImportDefinitionsBundle\Form\Type\Provider\CsvProviderType }
            - { name: import_definition.export_provider, type: csv, form-type: ImportDefinitionsBundle\Form\Type\ExportProvider\CsvProviderType }

    import_definition.provider.json:
        class: ImportDefinitionsBundle\Provider\JsonProvider
        tags:
            - { name: import_definition.provider, type: json, form-type: ImportDefinitionsBundle\Form\Type\Provider\JsonProviderType }
            - { name: import_definition.export_provider, type: json, form-type: ImportDefinitionsBundle\Form\Type\NoConfigurationType }

    import_definition.provider.external_sql:
        class: ImportDefinitionsBundle\Provider\ExternalSqlProvider
        tags:
            - { name: import_definition.provider, type: external_sql, form-type: ImportDefinitionsBundle\Form\Type\Provider\ExternalSqlProviderType }

    import_definition.provider.sql:
        class: ImportDefinitionsBundle\Provider\SqlProvider
        tags:
            - { name: import_definition.provider, type: sql, form-type: ImportDefinitionsBundle\Form\Type\Provider\SqlProviderType }

    import_definition.provider.xml:
        class: ImportDefinitionsBundle\Provider\XmlProvider
        tags:
            - { name: import_definition.provider, type: xml, form-type: ImportDefinitionsBundle\Form\Type\Provider\XmlProviderType }

    import_definition.provider.raw:
        class: ImportDefinitionsBundle\Provider\RawProvider
        tags:
            - { name: import_definition.provider, type: raw, form-type: ImportDefinitionsBundle\Form\Type\Provider\RawProviderType }

    ### SETTER AND GETTER
    import_definition.setter.gallery:
        class: ImportDefinitionsBundle\Setter\GallerySetter
        tags:
            - { name: import_definition.setter, type: gallery, form-type: ImportDefinitionsBundle\Form\Type\NoConfigurationType }

    import_definition.setter.multiselect:
        class: ImportDefinitionsBundle\Setter\MultiselectSetter
        tags:
        - { name: import_definition.setter, type: multiselect, form-type: ImportDefinitionsBundle\Form\Type\NoConfigurationType }

    import_definition.setter.classificationstore:
        class: ImportDefinitionsBundle\Setter\ClassificationStoreSetter
        tags:
            - { name: import_definition.setter, type: classificationstore, form-type: ImportDefinitionsBundle\Form\Type\Setter\ClassificationStoreSetterType }
            - { name: import_definition.getter, type: classificationstore, form-type: ImportDefinitionsBundle\Form\Type\Setter\ClassificationStoreSetterType }

    import_definition.setter.fieldcollection:
        class: ImportDefinitionsBundle\Setter\FieldCollectionSetter
        tags:
            - { name: import_definition.setter, type: fieldcollection, form-type: ImportDefinitionsBundle\Form\Type\Setter\FieldCollectionSetterType }
            - { name: import_definition.getter, type: fieldcollection, form-type: ImportDefinitionsBundle\Form\Type\Setter\FieldCollectionSetterType }

    import_definition.setter.key:
        class: ImportDefinitionsBundle\Setter\KeySetter
        tags:
            - { name: import_definition.setter, type: key, form-type: ImportDefinitionsBundle\Form\Type\NoConfigurationType }

    import_definition.setter.localizedfield:
        class: ImportDefinitionsBundle\Setter\LocalizedfieldSetter
        tags:
            - { name: import_definition.setter, type: localizedfield, form-type: ImportDefinitionsBundle\Form\Type\Setter\LocalizedFieldSetterType }
            - { name: import_definition.getter, type: localizedfield, form-type: ImportDefinitionsBundle\Form\Type\Setter\LocalizedFieldSetterType }

    import_definition.setter.objectbrick:
        class: ImportDefinitionsBundle\Setter\ObjectbrickSetter
        tags:
            - { name: import_definition.setter, type: objectbrick, form-type: ImportDefinitionsBundle\Form\Type\Setter\ObjectBrickSetterType }

    import_definition.setter.object_type:
        class: ImportDefinitionsBundle\Setter\ObjectTypeSetter
        tags:
            - { name: import_definition.setter, type: object_type, form-type: ImportDefinitionsBundle\Form\Type\NoConfigurationType }

    import_definition.listeners.object.delete:
        class: ImportDefinitionsBundle\EventListener\ObjectDeleteListener
        tags:
            - { name: kernel.event_listener, event: pimcore.dataobject.postDelete, method: onDataObjectDelete }

    import_definition.fetcher.objects:
        class: ImportDefinitionsBundle\Fetcher\ObjectsFetcher
        tags:
            - { name: import_definition.fetcher, type: objects, form-type: ImportDefinitionsBundle\Form\Type\Fetcher\ObjectsFetcherType }

    ### LOADER
    import_definition.loader.primary_key:
        class: ImportDefinitionsBundle\Loader\PrimaryKeyLoader
        tags:
            - { name: import_definition.loader, type: primary_key }
